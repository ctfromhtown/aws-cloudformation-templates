AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation template to create a demo environment with 3 Auto Scaling Groups in the default VPC'

Resources:
  # Launch Template for Auto Scaling Groups
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: AutoScalingDemoTemplate
      VersionDescription: Initial version
      LaunchTemplateData:
        ImageId: ami-0c55b159cbfafe1f0  # Amazon Linux 2 AMI (HVM), Kernel 5.10, SSD Volume Type (Replace if needed)
        InstanceType: t2.micro  # Free tier eligible
        KeyName: !Ref EC2KeyPair
        SecurityGroupIds:
          - !Ref InstanceSecurityGroup
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            yum update -y
            yum install -y httpd
            systemctl start httpd
            systemctl enable httpd
            echo "<h1>Welcome to Auto Scaling Group - $(hostname)</h1>" > /var/www/html/index.html

  # Security Group for EC2 instances
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP and SSH
      VpcId: !Ref DefaultVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  # Auto Scaling Groups
  AutoScalingGroup1:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: AutoScalingGroup1
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      MinSize: '1'
      MaxSize: '3'
      DesiredCapacity: '1'
      VPCZoneIdentifier: !Ref DefaultSubnetIds
      TargetGroupARNs:
        - !Ref LoadBalancerTargetGroup

  AutoScalingGroup2:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: AutoScalingGroup2
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      MinSize: '1'
      MaxSize: '3'
      DesiredCapacity: '1'
      VPCZoneIdentifier: !Ref DefaultSubnetIds
      TargetGroupARNs:
        - !Ref LoadBalancerTargetGroup

  AutoScalingGroup3:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: AutoScalingGroup3
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      MinSize: '1'
      MaxSize: '3'
      DesiredCapacity: '1'
      VPCZoneIdentifier: !Ref DefaultSubnetIds
      TargetGroupARNs:
        - !Ref LoadBalancerTargetGroup

  # Load Balancer for traffic distribution
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: AutoScalingDemoLB
      Subnets: !Ref DefaultSubnetIds
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      Scheme: internet-facing
      Type: application

  # Load Balancer Target Group
  LoadBalancerTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref DefaultVPC
      Protocol: HTTP
      Port: 80
      TargetType: instance

  # Load Balancer Listener
  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref LoadBalancerTargetGroup

  # IAM Role for EC2 Instances
  InstanceIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AutoScalingDemoEC2Role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole

  # Instance Profile
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref InstanceIAMRole

  # Parameters for Dynamic Resource Lookup
  DefaultVPC:
    Type: AWS::EC2::VPC::Id
    Description: Default VPC

  DefaultSubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Default VPC Subnet IDs

  EC2KeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: EC2 KeyPair for SSH Access

Outputs:
  LoadBalancerDNS:
    Description: Load Balancer DNS Name
    Value: !GetAtt LoadBalancer.DNSName
